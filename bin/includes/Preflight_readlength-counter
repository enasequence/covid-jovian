#!/bin/bash
# shellcheck disable=SC1091

#* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#* Perform automatic detection of readlength
#* Change settings of config/pipeline_parameters.yaml accordingly
#* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


#@ standards
shortreads="kmersizes: 21,33,55,77"
largereads="kmersizes: 21,33,55,77,99,127"
params="config/pipeline_parameters.yaml"

#> find smallest (gzipped) *.fq/*.fastq file in input_dir

realfilearray=()
while IFS= read -r -d $'\0'; do
    realfilearray+=("$REPLY")
done < <(find "${INPUT_DIR}" -maxdepth 1 -type f -regextype awk -regex '.*\.f(ast)?q(\.gz)?$' -print0)

n1=${#realfilearray[@]}

#@ Determine whether or not to actually count the reads...
if [ $params_WrapperSettings_ReadlengthDetection == "true" ]; then
    
    echo -e "\n\nCalculating average read length based on all input files ($n1) and configuring the Jovian settings accordingly" 
        
    #> get average reads length per file through a for-loop and put the rounded results in an array
    for f in "${realfilearray[@]}"
    do
        Reads_tempout=$(
            unpigz -cq -p "${USE_CORES}" --force "$f" | \
            head -n 15000 | \
            gawk '{if(NR%4==2) {count++; bases += length} } END{print bases/count}' | \
            xargs printf '%0.0f'
            )
        avg_readlength+=( "$Reads_tempout" )
    done

    #> Calculate single average length based on the created readlength array
        n=$n1
        m=$n
        sum=0
        while [ $n -gt 0 ]
        do
            num=${avg_readlength[$((n -1))]}
            sum=$((sum + num))
            n=$((n - 1))
        done
        avg=$(echo "$sum / $m" | bc -l)
        AVERAGE=$(printf '%0.0f' "$avg")


    ###> Print results
        printf "done\n\n"
        printf "The average read length is %s NT\n" "${AVERAGE}"
        printf "This value is rounded to the nearest number and based on all fastq(.gz) files (%s) in the given input directory.\n" "$n1"
        printf "\n"


    ###> Change parameters of `config/pipeline_parameters.yaml` to best match settings
        if [[ "${AVERAGE}" -gt "305" ]]; then
            if [[ "${workflow}" =~ (ILM_META|ILM_REF) ]]; then
                echo -e "\tAverage read lenght is >305 bp, are you sure this is Illumina data?"
                echo -e "\tIllumina data should not be larger than 300 bp on average."
                echo -e "\tPlease make sure the input data is a correctly formatted fastq. If this is the case, please investigate if something has gone wrong during sequencing."
                echo -e "Exiting..."
                exit 1
            
            elif [ "${workflow}" == "NANO_REF" ]; then 
                echo -e "\tAverage read length is above 305 bp."
                echo -e "\tContinuing with the Nanopore workflow...\n"
            
            fi

        elif [[ "${AVERAGE}" -ge "250" ]]; then
            if [[ "${workflow}" =~ (ILM_META|ILM_REF) ]]; then
                echo -e "\tAverage read length is >250 and <305 bp."
                echo -e "\tSetting large kmer sizes.\n"
                sed -i "s/.*kmersizes:.*/        ${largereads}/g" "${params}"
                ##! http://cab.spbu.ru/files/release3.11.0/manual.html#sec3.4 (we use version 3.11.0 in Jovian)
            
            elif [ "${workflow}" == "NANO_REF" ]; then
                echo -e "\tAverage read length is <305 bp."
                echo -e "\tThis probably isn't Nanopore data. The average Nanopore read length should (really) not be any smaller than ~300 bp per read"
                echo -e "\tPlease make sure the input data is correctly formatted. If this is the case, then please investigate if something has gone wrong during sequencing."
                echo -e "Exiting..."
                exit 1
            fi

        elif [[ "${AVERAGE}" -ge "50" ]]; then
            if [[ "${workflow}" =~ (ILM_META|ILM_REF) ]]; then
                echo -e "\tAverage read length is >50 and <250."
                echo -e "\tSetting small kmer sizes.\n"
                sed -i "s/.*kmersizes:.*/        ${shortreads}/g" "${params}"
                ##! http://cab.spbu.ru/files/release3.11.0/manual.html#sec3.4 (we use version 3.11.0 in Jovian)
            
            elif [ "${workflow}" == "NANO_REF" ]; then
                echo -e "\tAverage read length is <305 bp."
                echo -e "\tThis probably isn't Nanopore data. The average Nanopore read length should (really) not be any smaller than ~300 bp per read"
                echo -e "\tPlease make sure the input data is correctly formatted. If this is the case, then please investigate if something has gone wrong during sequencing."
                echo -e "Exiting..."
                exit 1
            fi
            

        elif [[ "${AVERAGE}" -lt "50" ]]; then
            echo -e "\tAverage read length is <50, the pipeline doesn't work properly with such short reads."
            echo -e "Exiting..."; exit 1
        fi

else
    echo -e "skipping read length counter"
    exit 0
fi

exit 0