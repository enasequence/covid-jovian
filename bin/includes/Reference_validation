#!/bin/bash
# shellcheck disable=SC1091

if [ "${workflow}" == "ILM_META" ]; then
    nicename="Illumina-metagenomics"
elif [ "${workflow}" == "ILM_REF" ]; then
    nicename="Illumina-reference"
elif [ "${workflow}" == "NANO_REF" ]; then
    nicename="Nanopore-reference"
fi


if [ "${workflow}" == "ILM_META" ] && [ "${REFERENCE_FASTA}" != "NONE" ]; then
    echo -e "A reference file was given but the chosen workflow: \"${nicename}\" does not support a reference genome."
    echo -e "Please check the arguments you have given to Jovian and try again."
    exit 1
fi

if [[ "${workflow}" =~ (ILM_REF|NANO_REF) ]] && [ "${REFERENCE_FASTA}" == "NONE" ]; then
    echo -e "You have chosen the \"${nicename}\" workflow, but no reference fasta file was given."
    echo -e "Please check the arguments you have given to Jovian and try again"
    exit 1
fi

if [[ "${workflow}" =~ (ILM_REF|NANO_REF) ]] && [ "${REFERENCE_FASTA}" != "NONE" ]; then
    
    if [ ! -s "${REFERENCE_FASTA}" ]; then
        echo -e "The given reference file, ${REFERENCE_FASTA}, does not exist. Please check your input."
        echo -e "Exiting..."
        exit 1
    fi

    if ! $( seqkit seq -v -t dna "${REFERENCE_FASTA}" > /dev/null ); then
        echo -e "The given input reference file does not seem to be a valid fasta file. Please see the error message above."
        echo -e "Exiting..."
        exit 1
    fi

    if (( $( grep -c "^>" "${REFERENCE_FASTA}" ) > 1 )); then
        echo -e "This version of Jovian does not support multi-record FASTA references, only one sequence per FASTA allowed. This feature will come in the next version. Exiting..."
        exit 1
    fi
fi



exit 0



if [ "${REFERENCE_ALIGNMENT}" == "TRUE" -a ! -s "${REFERENCE_FASTA}" ]; then #? If REFERENCE_ALIGNMENT is TRUE and the REFERENCE_ALIGNMENT file exists and is not empty...
    echo -e "The given reference file, ${REFERENCE_FASTA}, does not exist. Please check your input. Exiting..."
    exit 1
elif [ "${REFERENCE_ALIGNMENT}" == "TRUE" ] && ! $( seqkit seq -v -t dna "${REFERENCE_FASTA}" > /dev/null ); then
    echo -e "The given input reference FASTA does not appear to be valid, see the error message above. Exiting..."
    exit 1
elif [ "${REFERENCE_ALIGNMENT}" == "TRUE" ] && (( $( grep -c "^>" "${REFERENCE_FASTA}" ) > 1 )); then #TODO this is a failsafe until the next version, current version only allows single-record FASTA records since it's intended for nCoV first and foremost.
    echo -e "This version of Jovian does not support multi-record FASTA references, only one sequence per FASTA allowed. This feature will come in the next version. Exiting..."
    exit 1
    #TODO remove/update this part in a future version of Jovian which is multi-record FASTA compatible (e.g. segmented viruses or multiple clades of the same species in one record)
elif [ "${REFERENCE_ALIGNMENT}" == "TRUE" ]; then #? If REFERENCE_ALIGNMENT is TRUE, start RA.smk and exit with exit-code 0...
    echo -e "Starting optional reference alignment extension"
    # Starting nginx for IGVjs viz. In core pipeline this is started from report-jup. But since we don't have that for the extension, do it like this:
    echo -e "\nChecking if nginx needs to be activated..."
    (bin/includes/Start_nginx start)
    set +ue #turn off bash strict mode because snakemake and conda don't work in strict mode
    snakemake -s bin/Illumina_vir_Ref.smk --debug-dag --verbose --profile "${PROFILE}" --config reference="${REFERENCE_FASTA}" ${@} && echo -e "\nUnique identifier for this Jovian run is: $config_Jovian_run_identifier "
    set -ue #turn bash strict mode back on
    exit 0
else #? Else, start jovian_core.smk and do virus typing for all keywords.
    echo -e "Starting core metagenomics workflow"
    set +ue #turn off bash strict mode because snakemake and conda don't work in strict mode
    snakemake -s bin/Illumina_Meta.smk --debug-dag --verbose --profile "${PROFILE}" ${@} && echo -e "\nUnique identifier for this Jovian run is: $config_Jovian_run_identifier "
    set -ue #turn bash strict mode back on
fi